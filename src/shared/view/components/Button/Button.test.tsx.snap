// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Button Component primary button pressed matches snapshot 1`] = `"Primary button"`;

exports[`Button Component primary button pressed matches snapshot 2`] = `
<RNCSafeAreaProvider
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityLabel="Primary button"
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    style={
      {
        "alignItems": "center",
        "backgroundColor": "#FF7E1D",
        "borderColor": "transparent",
        "borderRadius": 40,
        "borderWidth": 1,
        "flexDirection": "row",
        "justifyContent": "center",
        "opacity": 0.5,
        "paddingHorizontal": 16,
        "paddingVertical": 8,
      }
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "flexDirection": "row",
          "gap": 8,
          "justifyContent": "center",
        }
      }
    >
      <Text
        numberOfLines={0}
        style={
          {
            "color": "#FFFFFF",
            "fontFamily": "OpenSans-Bold",
            "fontSize": 16,
            "lineHeight": 24,
            "textDecorationLine": "none",
          }
        }
      >
        Primary button
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Button Component renders Primary Button with props {"isDisabled": false, "isLoading": false} 1`] = `"Primary button"`;

exports[`Button Component renders Primary Button with props {"isDisabled": false, "isLoading": false} 2`] = `
<RNCSafeAreaProvider
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityLabel="Primary button"
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    style={
      {
        "alignItems": "center",
        "backgroundColor": "#FF7E1D",
        "borderColor": "transparent",
        "borderRadius": 40,
        "borderWidth": 1,
        "flexDirection": "row",
        "justifyContent": "center",
        "paddingHorizontal": 16,
        "paddingVertical": 8,
      }
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "flexDirection": "row",
          "gap": 8,
          "justifyContent": "center",
        }
      }
    >
      <Text
        numberOfLines={0}
        style={
          {
            "color": "#FFFFFF",
            "fontFamily": "OpenSans-Bold",
            "fontSize": 16,
            "lineHeight": 24,
            "textDecorationLine": "none",
          }
        }
      >
        Primary button
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Button Component renders Primary Button with props {"isDisabled": false, "isLoading": true} 1`] = `null`;

exports[`Button Component renders Primary Button with props {"isDisabled": false, "isLoading": true} 2`] = `
<RNCSafeAreaProvider
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityLabel="Primary button"
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": true,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": "Loading",
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    style={
      {
        "alignItems": "center",
        "backgroundColor": "#FF7E1D",
        "borderColor": "transparent",
        "borderRadius": 40,
        "borderWidth": 1,
        "flexDirection": "row",
        "justifyContent": "center",
        "paddingHorizontal": 16,
        "paddingVertical": 8,
      }
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "flexDirection": "row",
          "gap": 8,
          "justifyContent": "center",
        }
      }
    >
      <View
        size={24}
        style={
          {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "width": 24,
          }
        }
      >
        <ActivityIndicator
          color="#FFFFFF"
          testID="activity-indicator"
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Button Component renders Primary Button with props {"isDisabled": true, "isLoading": false} 1`] = `"Primary button"`;

exports[`Button Component renders Primary Button with props {"isDisabled": true, "isLoading": false} 2`] = `
<RNCSafeAreaProvider
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityLabel="Primary button"
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": true,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    style={
      {
        "alignItems": "center",
        "backgroundColor": "#F2F2F2",
        "borderColor": "transparent",
        "borderRadius": 40,
        "borderWidth": 1,
        "flexDirection": "row",
        "justifyContent": "center",
        "paddingHorizontal": 16,
        "paddingVertical": 8,
      }
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "flexDirection": "row",
          "gap": 8,
          "justifyContent": "center",
        }
      }
    >
      <Text
        numberOfLines={0}
        style={
          {
            "color": "#737373",
            "fontFamily": "OpenSans-Bold",
            "fontSize": 16,
            "lineHeight": 24,
            "textDecorationLine": "none",
          }
        }
      >
        Primary button
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Button Component renders Primary Button with props {"isDisabled": true, "isLoading": true} 1`] = `null`;

exports[`Button Component renders Primary Button with props {"isDisabled": true, "isLoading": true} 2`] = `
<RNCSafeAreaProvider
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityLabel="Primary button"
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": true,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": "Loading",
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    style={
      {
        "alignItems": "center",
        "backgroundColor": "#F2F2F2",
        "borderColor": "transparent",
        "borderRadius": 40,
        "borderWidth": 1,
        "flexDirection": "row",
        "justifyContent": "center",
        "paddingHorizontal": 16,
        "paddingVertical": 8,
      }
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "flexDirection": "row",
          "gap": 8,
          "justifyContent": "center",
        }
      }
    >
      <View
        size={24}
        style={
          {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "width": 24,
          }
        }
      >
        <ActivityIndicator
          color="#737373"
          testID="activity-indicator"
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Button Component renders Secondary Button with props {"isDisabled": false, "isLoading": false} 1`] = `"Secondary button"`;

exports[`Button Component renders Secondary Button with props {"isDisabled": false, "isLoading": false} 2`] = `
<RNCSafeAreaProvider
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityLabel="Secondary button"
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    style={
      {
        "alignItems": "center",
        "backgroundColor": "transparent",
        "borderColor": "#FF7E1D",
        "borderRadius": 40,
        "borderWidth": 1,
        "flexDirection": "row",
        "justifyContent": "center",
        "paddingHorizontal": 16,
        "paddingVertical": 8,
      }
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "flexDirection": "row",
          "gap": 8,
          "justifyContent": "center",
        }
      }
    >
      <Text
        numberOfLines={0}
        style={
          {
            "color": "#FF7E1D",
            "fontFamily": "OpenSans-Bold",
            "fontSize": 16,
            "lineHeight": 24,
            "textDecorationLine": "none",
          }
        }
      >
        Secondary button
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Button Component renders Secondary Button with props {"isDisabled": false, "isLoading": true} 1`] = `null`;

exports[`Button Component renders Secondary Button with props {"isDisabled": false, "isLoading": true} 2`] = `
<RNCSafeAreaProvider
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityLabel="Secondary button"
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": true,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": "Loading",
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    style={
      {
        "alignItems": "center",
        "backgroundColor": "transparent",
        "borderColor": "#FF7E1D",
        "borderRadius": 40,
        "borderWidth": 1,
        "flexDirection": "row",
        "justifyContent": "center",
        "paddingHorizontal": 16,
        "paddingVertical": 8,
      }
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "flexDirection": "row",
          "gap": 8,
          "justifyContent": "center",
        }
      }
    >
      <View
        size={24}
        style={
          {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "width": 24,
          }
        }
      >
        <ActivityIndicator
          color="#FF7E1D"
          testID="activity-indicator"
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Button Component renders Secondary Button with props {"isDisabled": true, "isLoading": false} 1`] = `"Secondary button"`;

exports[`Button Component renders Secondary Button with props {"isDisabled": true, "isLoading": false} 2`] = `
<RNCSafeAreaProvider
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityLabel="Secondary button"
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": true,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    style={
      {
        "alignItems": "center",
        "backgroundColor": "#F2F2F2",
        "borderColor": "#737373",
        "borderRadius": 40,
        "borderWidth": 1,
        "flexDirection": "row",
        "justifyContent": "center",
        "paddingHorizontal": 16,
        "paddingVertical": 8,
      }
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "flexDirection": "row",
          "gap": 8,
          "justifyContent": "center",
        }
      }
    >
      <Text
        numberOfLines={0}
        style={
          {
            "color": "#737373",
            "fontFamily": "OpenSans-Bold",
            "fontSize": 16,
            "lineHeight": 24,
            "textDecorationLine": "none",
          }
        }
      >
        Secondary button
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Button Component renders Secondary Button with props {"isDisabled": true, "isLoading": true} 1`] = `null`;

exports[`Button Component renders Secondary Button with props {"isDisabled": true, "isLoading": true} 2`] = `
<RNCSafeAreaProvider
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityLabel="Secondary button"
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": true,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": "Loading",
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    style={
      {
        "alignItems": "center",
        "backgroundColor": "#F2F2F2",
        "borderColor": "#737373",
        "borderRadius": 40,
        "borderWidth": 1,
        "flexDirection": "row",
        "justifyContent": "center",
        "paddingHorizontal": 16,
        "paddingVertical": 8,
      }
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "flexDirection": "row",
          "gap": 8,
          "justifyContent": "center",
        }
      }
    >
      <View
        size={24}
        style={
          {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "width": 24,
          }
        }
      >
        <ActivityIndicator
          color="#737373"
          testID="activity-indicator"
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Button Component renders Tertiary Button with props {"isDisabled": false, "isLoading": false} 1`] = `"Tertiary button"`;

exports[`Button Component renders Tertiary Button with props {"isDisabled": false, "isLoading": false} 2`] = `
<RNCSafeAreaProvider
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityLabel="Tertiary button"
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    style={
      {
        "alignItems": "center",
        "backgroundColor": "transparent",
        "borderColor": "transparent",
        "borderRadius": 40,
        "borderWidth": 1,
        "flexDirection": "row",
        "justifyContent": "center",
        "paddingHorizontal": 16,
        "paddingVertical": 8,
      }
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "flexDirection": "row",
          "gap": 8,
          "justifyContent": "center",
        }
      }
    >
      <Text
        numberOfLines={0}
        style={
          {
            "color": "#FF7E1D",
            "fontFamily": "OpenSans-Bold",
            "fontSize": 16,
            "lineHeight": 24,
            "textDecorationLine": "underline",
          }
        }
      >
        Tertiary button
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Button Component renders Tertiary Button with props {"isDisabled": false, "isLoading": true} 1`] = `null`;

exports[`Button Component renders Tertiary Button with props {"isDisabled": false, "isLoading": true} 2`] = `
<RNCSafeAreaProvider
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityLabel="Tertiary button"
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": true,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": "Loading",
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    style={
      {
        "alignItems": "center",
        "backgroundColor": "transparent",
        "borderColor": "transparent",
        "borderRadius": 40,
        "borderWidth": 1,
        "flexDirection": "row",
        "justifyContent": "center",
        "paddingHorizontal": 16,
        "paddingVertical": 8,
      }
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "flexDirection": "row",
          "gap": 8,
          "justifyContent": "center",
        }
      }
    >
      <View
        size={24}
        style={
          {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "width": 24,
          }
        }
      >
        <ActivityIndicator
          color="#FF7E1D"
          testID="activity-indicator"
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Button Component renders Tertiary Button with props {"isDisabled": true, "isLoading": false} 1`] = `"Tertiary button"`;

exports[`Button Component renders Tertiary Button with props {"isDisabled": true, "isLoading": false} 2`] = `
<RNCSafeAreaProvider
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityLabel="Tertiary button"
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": true,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    style={
      {
        "alignItems": "center",
        "backgroundColor": "transparent",
        "borderColor": "transparent",
        "borderRadius": 40,
        "borderWidth": 1,
        "flexDirection": "row",
        "justifyContent": "center",
        "paddingHorizontal": 16,
        "paddingVertical": 8,
      }
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "flexDirection": "row",
          "gap": 8,
          "justifyContent": "center",
        }
      }
    >
      <Text
        numberOfLines={0}
        style={
          {
            "color": "#737373",
            "fontFamily": "OpenSans-Bold",
            "fontSize": 16,
            "lineHeight": 24,
            "textDecorationLine": "underline",
          }
        }
      >
        Tertiary button
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Button Component renders Tertiary Button with props {"isDisabled": true, "isLoading": true} 1`] = `null`;

exports[`Button Component renders Tertiary Button with props {"isDisabled": true, "isLoading": true} 2`] = `
<RNCSafeAreaProvider
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityLabel="Tertiary button"
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": true,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": "Loading",
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    style={
      {
        "alignItems": "center",
        "backgroundColor": "transparent",
        "borderColor": "transparent",
        "borderRadius": 40,
        "borderWidth": 1,
        "flexDirection": "row",
        "justifyContent": "center",
        "paddingHorizontal": 16,
        "paddingVertical": 8,
      }
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "flexDirection": "row",
          "gap": 8,
          "justifyContent": "center",
        }
      }
    >
      <View
        size={24}
        style={
          {
            "alignItems": "center",
            "height": 24,
            "justifyContent": "center",
            "width": 24,
          }
        }
      >
        <ActivityIndicator
          color="#737373"
          testID="activity-indicator"
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Button Component secondary button pressed matches snapshot 1`] = `"Secondary button"`;

exports[`Button Component secondary button pressed matches snapshot 2`] = `
<RNCSafeAreaProvider
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityLabel="Secondary button"
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    style={
      {
        "alignItems": "center",
        "backgroundColor": "transparent",
        "borderColor": "#FF7E1D",
        "borderRadius": 40,
        "borderWidth": 1,
        "flexDirection": "row",
        "justifyContent": "center",
        "opacity": 0.5,
        "paddingHorizontal": 16,
        "paddingVertical": 8,
      }
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "flexDirection": "row",
          "gap": 8,
          "justifyContent": "center",
        }
      }
    >
      <Text
        numberOfLines={0}
        style={
          {
            "color": "#FF7E1D",
            "fontFamily": "OpenSans-Bold",
            "fontSize": 16,
            "lineHeight": 24,
            "textDecorationLine": "none",
          }
        }
      >
        Secondary button
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Button Component tertiary button pressed matches snapshot 1`] = `"Tertiary button"`;

exports[`Button Component tertiary button pressed matches snapshot 2`] = `
<RNCSafeAreaProvider
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityLabel="Tertiary button"
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    style={
      {
        "alignItems": "center",
        "backgroundColor": "transparent",
        "borderColor": "transparent",
        "borderRadius": 40,
        "borderWidth": 1,
        "flexDirection": "row",
        "justifyContent": "center",
        "opacity": 0.5,
        "paddingHorizontal": 16,
        "paddingVertical": 8,
      }
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "flexDirection": "row",
          "gap": 8,
          "justifyContent": "center",
        }
      }
    >
      <Text
        numberOfLines={0}
        style={
          {
            "color": "#FF7E1D",
            "fontFamily": "OpenSans-Bold",
            "fontSize": 16,
            "lineHeight": 24,
            "textDecorationLine": "underline",
          }
        }
      >
        Tertiary button
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;
